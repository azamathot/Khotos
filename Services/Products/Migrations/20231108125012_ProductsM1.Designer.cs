// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Products.Data;

#nullable disable

namespace Products.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    [Migration("20231108125012_ProductsM1")]
    partial class ProductsM1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Products.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Разработка программного обеспечения"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Образовательные услуги"
                        });
                });

            modelBuilder.Entity("Products.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Веб-приложения (включая SPA, PWA)"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Десктопные приложения (Windows)"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Мобильные приложения на Xamarin (Android, Windows 10, ios)"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Интеграция с соц. сетями (Telegram, WhatsApp, Instagram)"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Автоматизация бизнес процессов"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Репетиторство по программированию (Python, C#, ASP.Net Core, Xamarin, JS, HTML5 и CSS3)"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "Подготовка к ЕГЭ по информатике"
                        });
                });

            modelBuilder.Entity("Products.Models.Product", b =>
                {
                    b.HasOne("Products.Models.Category", null)
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Products.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
