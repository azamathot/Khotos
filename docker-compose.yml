version: '3.8'

volumes:
  sqlserver_data:
  keycloak_data:
  blazorwasm:


networks:
  external-network:


secrets:
  DB_PASSWORD:
    file: .env
    

services:
  # proxy:
  #   image:  nginx:latest
  #   hostname: proxy
  #   ports:
  #     - 80:8080
  #     - 443:8081
  #   # restart: always
  #   volumes:
  #     - ./nginx/conf/:/etc/nginx/conf.d/:ro
  #     - ./nginx/ssl/:/etc/nginx/ssl/:ro

  sql:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    hostname: sql_server2022
    ports: # not actually needed, because the two services are on the same network
      - "1433:1433" 
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=DB_PASSWORD
    volumes:
      - sqlserver_data:/var/opt/mssql
    secrets:
      - DB_PASSWORD


  keycloak:
    image: quay.io/keycloak/keycloak
    hostname: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      [
        'start-dev'
      ]
    ports:
      - 8080:8080
    volumes:
      - keycloak_data:/opt/keycloak/data/

  rabbitmq:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672" # Порт для AMQP
      - "15672:15672" # Порт для веб-консоли управления


  webgateway:
    image: ${DOCKER_REGISTRY-}webgateway
    hostname: webgateway
    build:
      context: .
      dockerfile: Gateways/WebGateway/Dockerfile


  orderingapi:
    image: ${DOCKER_REGISTRY-}orderingapi
    hostname: orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Dockerfile


  paymentapi:
    image: ${DOCKER_REGISTRY-}paymentapi
    hostname: paymentapi
    build:
      context: .
      dockerfile: Services/Payment/Dockerfile


  portfolioapi:
    image: ${DOCKER_REGISTRY-}portfolioapi
    hostname: portfolioapi
    build:
      context: .
      dockerfile: Services/Portfolio/Dockerfile


  productsapi:
    image: ${DOCKER_REGISTRY-}productsapi
    hostname: productsapi
    build:
      context: .
      dockerfile: Services/Products/Dockerfile


  chatapi:
    image: ${DOCKER_REGISTRY-}chatapi
    hostname: chatapi
    build:
      context: .
      dockerfile: Services/ChatAPI/Dockerfile


  brokerrabbitmq:
    image: ${DOCKER_REGISTRY-}brokerrabbitmq
    hostname: brokerrabbitmq
    build:
      context: .
      dockerfile: Services/BrokerRabbitMQ/Dockerfile


  # khotosui:
  #   image: ${DOCKER_REGISTRY-}khotosui
  #   hostname: khotosui
  #   build:
  #     context: .
  #     dockerfile: Clients/KhotosUI/Dockerfile
  #   ports:
  #     - "7010:80"
  #     # - "8081"
  #   depends_on:
  #     - productsapi
  #     - keycloak
  #     - sql
  #     - webgateway
  #   environment:
  #     - WebGatewayUrl=https://webgateway:8081/
  #     - Keycloak:auth-server-url=http://keycloak:8080/


  khotos:
    image: ${DOCKER_REGISTRY-}khotos
    hostname: khotos
    build:
      context: .
      dockerfile: Clients/Khotos/Dockerfile
    depends_on:
      - productsapi
      - keycloak
      - sql
      - webgateway
